generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Appointment {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    date      DateTime
    duration  Int
    category  String
    notes     String?
    status    String

    patient        User   @relation("PatientAppointments", fields: [patientId], references: [id], onDelete: Cascade)
    patientId      String
    professional   User   @relation("ProfessionalAppointments", fields: [professionalId], references: [id], onDelete: Cascade)
    professionalId String

    @@map("appointments")
}

model Payment {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    month     DateTime
    amount    Float
    status    String

    user   User   @relation(fields: [userId], references: [id])
    userId String

    @@map("payments")
}

model Post {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    slug      String   @unique
    title     String
    content   String
    published Boolean
    banner    String
    author    User     @relation(fields: [authorId], references: [id])
    authorId  String

    @@map("posts")
}

enum UserRole {
    OWNER
    ADMIN
    PROFESSIONAL
    PATIENT
}

model Role {
    id   String   @id @default(cuid())
    role UserRole @unique

    users User[]

    @@map("roles")
}

model User {
    id        String   @id @default(cuid())
    usercode  Int      @unique @default(autoincrement()) // has to start at 10001
    fullName  String
    shortName String
    password  String
    salt      String
    email     String?  @unique
    image     String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
    roleId String

    appointmentsAsPatient      Appointment[] @relation("PatientAppointments")
    appointmentsAsProfessional Appointment[] @relation("ProfessionalAppointments")
    payments                   Payment[]
    Post                       Post[]

    @@map("users")
}
